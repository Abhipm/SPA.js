spa.component("gitLabIssue",{target:"#gitLabIssue"}),spa.extendComponent("gitLabIssue",{data:{},renderCallback:function(s){app.uiHelper.indicateLoading("#btnIssueFullRefresh","add");var e=s.model;app.gitLabIssue.data=e,spa.optionsLoad("#assignToNewMember",app.gitLabIssues.prjMembers,1,2),app.gitLabIssue.resetAssignTo(),app.gitLabIssue.listNotes(),app.init.accordions("#containerGitLabIssue"),app.init.checkboxs("#containerGitLabIssue"),app.uiHelper.indicateLoading("#btnIssueFullRefresh","remove")},resetAssignTo:function(){var s=spa.findSafe(app.gitLabIssue.data,"assignee.id","");spa.selectOptionForValue("#assignToNewMember",s)},assignTo:function(){var s=spa.optionsSelectedValues("#assignToNewMember");s&&$.confirmDialog({title:"Confirm",message:"msg.confirm.assignTo",type:"Informational",data:{iid:app.gitLabIssue.data.id,name:spa.optionsSelectedTexts("#assignToNewMember")},buttons:{yes:{i18n:"lbl.btn.yes.assignTo",action:function(){app.gitLabIssue.assignToX(s)}},no:{i18n:"lbl.btn.no.assignTo",action:function(){app.gitLabIssue.resetAssignTo()}}}})},assignToMe:function(){spa.selectOptionForValue("#assignToNewMember",app.activeGitLab.uId),app.gitLabIssue.assignTo()},assignToX:function(s){var e=app.gitLabIssue.data.id;e&&s&&(app.uiHelper.indicateLoading("#btnIssueFullRefresh","add"),spa.api.put(spa.api.url("@gitLabIssueAssignTo",{pid:app.activeGitLab.pid,issueId:e,mid:s}),function(s){app.uiHelper.flyout("success","msg.flyout.issue.assignedToX",void 0,{iid:s.id||"?",name:spa.findSafe(s,"assignee.name","?")}),app.gitLabIssue.refresh()}))},listNotes:function(){var s=app.gitLabIssue.data.id;s&&(app.uiHelper.indicateLoading("#btnCommentsFullRefresh","add"),spa.api.get(spa.api.url("@gitLabIssueNotes",{pid:app.activeGitLab.pid,issueId:s}),function(s){app.uiHelper.indicateLoading("#btnCommentsFullRefresh","add"),spa.renderComponent("issueNotes",{data:{iNotes:s}})}))},clearPostForm:function(){$("#issueNewNoteBody").val(""),$("#closeIssue").prop("checked",!1)},closeIssueX:function(s){s&&(app.uiHelper.indicateLoading("#btnIssueFullRefresh","add"),spa.api.put(spa.api.url("@gitLabIssueClose",{pid:app.activeGitLab.pid,issueId:s}),function(s){app.uiHelper.flyout("success","msg.flyout.issue.closed",void 0,{iid:s.id||"?"}),app.gitLabIssue.refresh()}))},closeIssueConfirm:function(){var s=app.gitLabIssue.data.id;s&&$.confirmDialog({title:"Confirm",message:"msg.confirm.closeIssue",type:"Warning",data:{iid:app.gitLabIssue.data.id},buttons:{yes:{i18n:"lbl.btn.yes.closeIssue",action:function(){app.gitLabIssue.postNewNote(!0)}},no:{i18n:"lbl.btn.no.closeIssue",action:function(){app.gitLabIssue.clearPostForm()}}}})},postNewNote:function(s){var e=app.gitLabIssue.data.id,a=($("#issueNewNoteBody").val()||"").trimStr();e&&(a?$("#closeIssue").is(":checked")&&!s?app.gitLabIssue.closeIssueConfirm():(app.uiHelper.indicateLoading("#btnIssuePost","add"),spa.api.post(spa.api.url("@gitLabIssueNotesNew",{pid:app.activeGitLab.pid,issueId:e}),{body:a},function(){app.uiHelper.indicateLoading("#btnIssuePost","remove"),$("#issueNewNoteBody").val(""),app.uiHelper.flyout("success","msg.flyout.issue.notePosted"),app.gitLabIssue.listNotes(),$("#closeIssue").is(":checked")&&app.gitLabIssue.closeIssueX(e)})):app.uiHelper.showAlert("warning","validation.alert.issue.note.blank"))},refresh:function(){var s=app.gitLabIssue.data.id;s&&(app.uiHelper.indicateLoading("#btnIssueFullRefresh","add"),spa.api.get(spa.api.url("@gitLabIssueDetails",{pid:app.activeGitLab.pid,issueId:s}),function(s){s.description=app.uiHelper.updateGitLabImageSrc(s.description),spa.renderComponent("gitLabIssue",{data:s})}))}});
spa.component("gitLabIssues",{target:"#tabContainer_gitLabIssues"}),spa.extendComponent("gitLabIssues",{controlActionButtonsEnabled:!1,tableSelector:"#gitLabIssues",cCount:0,wCount:0,prjMembers:{},lastClickedIssueId:"",renderCallback:function(){"use strict";$("#container_gitLabIssues").addClass("hide"),app.gitLabIssues.list(),app.gitLabIssues.membersList(),$("#container_gitLabIssues .dropdown").dropdown()},membersList:function(){spa.api.get(spa.api.url("@gitLabProjectMembers",{pid:app.activeGitLab.pid}),function(e){app.gitLabIssues.prjMembers={},spa.isBlank(e)||_.each(e,function(e){app.gitLabIssues.prjMembers[e.id]=((e.name.containsStr(",")?e.name.split(",")[1]:e.name).trimStr().split(" ")[0]||e.username).toProperCase()})})},list:function(e){"use strict";app.gitLabIssues.cCount=0,app.gitLabIssues.wCount=0,app.uiHelper.indicateLoading("#btnIssuesFullRefresh","add");var t=app.gitLabIssues.tableSelector,a=$("#mainContent").height();dt.tables[dt.tableKey("tableSelector")]&&$(t).DataTable().clear().draw(),dt.DataTable(t,{ajax:{url:spa.api.url("@gitLabIssues",{pid:app.activeGitLab.pid}),type:"GET",data:e||{},error:spa.api.onReqError,dataSrc:function(e){return e}},scrollY:a-247,columnDefs:[{targets:[0],orderable:!1,searchable:!1},{targets:[3],orderData:[7]},{targets:[7],visible:!1}],colVis:{exclude:[0,1,2,4,7]},aaSorting:[[3,"desc"]],"export":{iid:"IssueId",state:"State",id:"Severity",labels:"Labels",author:"Author",project_id:"AssignedTo",created_at:"CreatedAt",updated_at:"UpdatedAt",milestone:"Milestone",title:"Title"},exportFormat:{id:function(e,t){return _.filter(t.labels,function(e){return app.conf.issueSeverities.containsStrIgnoreCase(e)}).join(",")},author:function(e){return e.name||"Unknown"},project_id:function(e,t){var a=t.assignee||{name:"None"};return a.name||"None"},milestone:function(e){return spa.findSafe(e,"title","-")}},createdRow:function(e,a,s){var i=$(e);i.data("rowData",a).attr("data-row-id",s).attr("data-issue-id",a.id);var n=_.filter(a.labels,function(e){return app.conf.issueSeverities.containsStrIgnoreCase(e)});_.each(n,function(e){app.conf.issueLabelsGrp.CRITICAL.containsStrIgnoreCase(e)&&app.gitLabIssues.cCount++,app.conf.issueLabelsGrp.WARNING.containsStrIgnoreCase(e)&&app.gitLabIssues.wCount++}),i.on("click",function(){var e=$(this),a=(e.data("rowData"),e.data("rowId")),s=e.closest("tbody").find(":checkbox"),i=s.filter(":checked"),n=i.length>0,o=e.find(":checkbox");n?o.trigger("click"):(e.siblings().removeClass("selected"),e.addClass("selected"),dt.updateRowSelection(t),app.gitLabIssues.controlActionButtons(t),app.gitLabIssues.showDetails(a))}),i.find(":checkbox").on("click",function(e){var a=($(this),$(t+"_wrapper tbody").find(":checkbox:checked").closest("tr")),s=$(t+"_wrapper tbody").find(":checkbox:not(:checked)").closest("tr"),i=(a.length>0,_.map(s,function(e){return $(e).data("rowId")})),n=_.map(a,function(e){return $(e).data("rowId")}),o=dt.tables[dt.tableKey(t)];s.removeClass("selected"),a.addClass("selected"),spa.isBlank(i)||o.rows(i).deselect(),spa.isBlank(n)||o.rows(n).select(!0),app.gitLabIssues.controlActionButtons(t),1==a.length&&app.gitLabIssues.showDetails(a.data("rowId")),e.stopPropagation()})},columns:[{width:"15",title:'<input type="checkbox" class="CHECK-ALL-NONE" onclick="dt.selectAllNone(\''+t+"', this);app.gitLabIssues.controlActionButtons('"+t+"');\"/>",data:"id",render:function(e){var t='<input type="checkbox" class="ISSUE-CHECK" data-serialize-context="ISSUE-CHECK" name="selectedIssuesList" value="'+e+'" />';return t}},{width:"70",title:'<span data-i18n="tbl.col.title.issue.Severity"></span>',data:"labels",render:function(e){return _.filter(e,function(e){return app.conf.issueSeverities.containsStrIgnoreCase(e)}).join("<br/>")}},{width:"100",title:'<span data-i18n="tbl.col.title.issue.assignTo"></span>',render:function(e,t,a){var s=a.assignee||{name:"None",username:"-"};return'<span title="author: '+a.author.name+'">'+(s.name||"None")+" ["+(s.username||"-")+"]"+"</span>"}},{width:"100",title:'<span data-i18n="tbl.col.title.issue.updateDt"></span>',data:"updated_at",render:function(e){return'<span title="UTC: '+e+'">'+app.uiHelper.utcToLocal(e)+"</span>"}},{width:"100",title:'<span data-i18n="tbl.col.title.issue.createdBy"></span>',data:"author",render:function(e,t,a){var s=e||{name:"None",username:"-"};return'<span title="at: '+app.uiHelper.utcToLocal(a.created_at)+'">'+(s.name||"None")+" ["+(s.username||"-")+"]"+"</span>"}},{width:"100",title:'<span data-i18n="tbl.col.title.issue.milestone"></span>',data:"milestone",render:function(e){return spa.findSafe(e,"title","-")}},{title:'<span data-i18n="tbl.col.title.issue.title"></span><br/><span data-i18n="tbl.col.title.issue.labels"></span>',data:"title",render:function(e,t,a){return a.milestone,"#"+a.iid+": <b>"+e+"</b><sup data-i18n=\"title:'tbl.col.title.issue.notes'\"> "+a.user_notes_count+"</sup>"+'<br/><span class="issues labels-all">'+a.labels.join(", ")+"</span>"}},{title:"",data:"updated_at"}],drawCallback:function(){app.gitLabIssues.controlActionButtons(t),dt.columnsAdjustNow()},initComplete:function(){$("#container_gitLabIssues").removeClass("hide"),app.gitLabIssues.updateSeverityCounts(),dt.customize(t),app.uiHelper.indicateLoading("#btnIssuesFullRefresh","remove")}})},controlActionButtons:function(e){if(app.gitLabIssues.controlActionButtonsEnabled){var t=e+"_wrapper",a=$(t),s=a.find("tbody tr.selected"),i=s.length,n=i>0,o=dt.selectedRowData(e),r=a.find("tbody td.VIEW-COL"),l="Closed";if(r.addClass("disabled"),dt.updateCheckAllNoneChecboxStatus(e),a.closest(".container-component").find("button.ACTION").addClass("hide"),n)if(a.find("tbody :checkbox:checked").length?r.addClass("disabled"):r.removeClass("disabled"),1===i)a.closest(".container-component").find("button.ACTION."+o.Status.toUpperCase()).removeClass("hide");else{var c=a.find("tr.selected td.ISSUE-STATUS").map(function(e,t){return t.innerHTML}),u=c[0],d=_.every(c,function(e){return e.equalsIgnoreCase(u)});d?a.closest(".container-component").find("button.ACTION."+u.toUpperCase()).removeClass("hide"):0>_.indexOf(c,l)&&a.closest(".container-component").find("button.ACTION.-"+l.toUpperCase()).removeClass("hide")}else r.removeClass("disabled")}},showDetails:function(e){"use strict";app.uiHelper.indicateLoading("#btnIssueFullRefresh","add");var t=dt.selectedRowDataByRowId(app.gitLabIssues.tableSelector,e);t.rowId=e,t.description=app.uiHelper.updateGitLabImageSrc(t.description);var a={data:t},s=dt.tables[dt.tableKey(app.gitLabIssues.tableSelector)],i=s?s.rows({selected:!0})[0].length:0;if(i>1){var n=$(":checkbox.ISSUE-CHECK:checked").length;n||s.rows(":not([data-issue-id="+t.id+"])").deselect()}spa.renderComponent("gitLabIssue",a)},selectedIssueIDs:function(){"use strict";var e=app.gitLabIssues.tableSelector,t=spa.serialize(e+"_wrapper","ISSUE-CHECK").selectedIssuesList;return spa.isBlank(t)?t=[""+dt.selectedRowData(e).iid]:"string"==typeof t&&(t=[t]),t},updateSeverityCounts:function(){var e=$("#container_gitLabIssues");e.find("#btn_Severity_CRITICAL .count").html(app.gitLabIssues.cCount),e.find("#btn_Severity_WARNING .count").html(app.gitLabIssues.wCount)},filterByMine:function(){var e=app.activeGitLab.uName||app.user.storeName||"";app.gitLabIssues.filterByCol(4,e)},filterByAssignToMe:function(){var e=app.activeGitLab.uName||app.user.storeName||"";app.gitLabIssues.filterByCol(2,e)},filterByCol:function(e,t,a){a||dt.clearActiveTableSearch();var s=$(".dataTables_wrapper:visible [data-column-index="+e+"]").find("input[type=search]");if(s.length){var i=a?s.val():"";s.val(i+t).trigger("keyup")}},showHideQuickFilter:function(e){var t=$("#container_gitLabIssues").find(".grid-filters-buttons");e?t.removeClass("hide"):t.addClass("hide")},quickFilter:function(e,t){"use strict";$(e).toggleClass("active"),$(t).removeClass("active");var a=_.map($("#container_gitLabIssues .grid-filters-buttons button.active"),function(e){return $(e).data("filter")}).join("").getRightStr("Severity_");if(dt.clearActiveTableSearch(),a){var s=app.conf.issueLabelsGrp[a];app.gitLabIssues.filterByCol(1,s)}},clearQuickFilter:function(){$("#container_gitLabIssues .grid-filters-buttons button.active").removeClass("active")},openNewIssue:function(){app.uiHelper.openInNewTab(app.activeGitLab.web+"/issues/new")},action:function(e){"use strict";var t=_.map(dt.selectedRowsData(app.gitLabIssues.tableSelector,["LogMessageId"]),function(e){return e.LogMessageId}),a={LogMessageIds:t.join(",")};spa.api.put(spa.api.url("@gitLabIssueDetails",{type:e}),a,function(){dt.reloadDatatable(app.gitLabIssues.tableSelector),app.uiHelper.flyout("success","common.msg.success",{op:"Issue has been."})})}});
spa.component("settings",{target:"#mainContent"}),spa.extendComponent("settings",{renderCallback:function(){"use strict";app.header.activate("settings");var t=_.merge({},app.storage.getConnectionDetails());spa.isBlank(t)||(t.key=t.key?sjcl.decrypt(sjcl.decrypt(appStorage.lastSignIn,app.user._),t.key):"",spa.dataBind("#containerPrimaySettings",t),app.settings.listProjects(),app.settings.showProfile())},save:function(t){var e=!1;if(spa.isBlank(spa.validate("#fm_Settings",!0))){var a=spa.serializeFormToSimpleJSON("#fm_Settings"),s=appStorage[app.user.storeName];s.hasOwnProperty("connections")||(s.connections={}),s.defaultConnection=a.conName,s.connections[a.conName]={url:a.url,key:sjcl.encrypt(sjcl.decrypt(appStorage.lastSignIn,app.user._),a.key)},app.init.updateAppStorage(),app.activeGitLab.apiUrl=a.url,app.activeGitLab.pKey=a.key,app.uiHelper.flyout("Sucess","msg.flyout.saveSettingsPrimary"),e=!0,app.settings.showProfile(),t||app.settings.listProjects()}return e},listProjects:function(){spa.api.get("@gitLabProjects",function(t){spa.renderComponent("gitLabProjects",{data:{projects:t}})})},showProfile:function(){spa.api.get("@gitLabProfile",function(t){spa.renderComponent("gitLabProfile",{data:t})})},fetchPrj:function(){app.settings.save(!0)?app.settings.listProjects():app.uiHelper.flyout("Warning","msg.flyout.saveSettingsPrimary.failed")}});